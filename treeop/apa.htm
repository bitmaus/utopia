
<script>
function User () {
        this.token = token;
	// set cookies
	this.checkToken = function () { }
	this.checkUser = function (user, password) { } }

function login() { alert("display login"); };
function signup() { alert("display signup"); };

function search() { alert($('#term').val()); };</script>

<div id="panel">
    <div id="project">
        <div id="forest" class="panel"><img src="apt/icon/tree.jpg" class="icon" /></div>
        <div id="tree"><img src="apt/icon/tree.jpg" class="icon" /><span>tree name</span></div>
	<div id="branch"><img src="apt/icon/branch.jpg" class="icon" /><span>branch name</span></div>
	<div id="leaf"><div class="panel-item"><img src="apt/icon/leaf.svg" class="icon" /><span>leaf name</span></div>

<style>
#panel { height:100%; }
#project { height:100%; width: 30%; background-color:antiquewhite; display: inline-block; vertical-align: top; text-align: center; }

.panel { border: green solid 1px; border-radius: 4px; width: 50%; padding: 12 12 12 12; margin: 12 12 12 12; background-color:honeydew; display: inline-block; }
.panel-item { display: flex; align-items: center; }
.panel-item:hover { border: solid 1px black; border-radius: 2px; }</style>

<script>
function Forest() { this.trees = []; }
function Tree () { this.name = ""; this.branches = []; }
function Branch () { this.name = ""; this.leaves = []; }
function Leaf () { this.name = ""; this.content = ""; }

var myForest = new Forest();
myForest.trees.add(new Tree());
myForest.trees[0].name = "demo tree";
myForest.trees[0].branches.add(new Branch());
myForest.trees[0].branches[0].name = "demo branch";
myForest.trees[0].branches[0].leaves.add(new Leaf());
myForest.trees[0].branches[0].leaves[0].name = "demo leaf";
myForest.trees[0].branches[0].leaves[0].content = "## a sample header";

function loadTree() { $("#forest").append($("#tree").html()); }</script>

<button onclick="loadTree();">Tree</button>

        <div id="inputs" class="panel">
            <div id="input">input</div></div>

        <div id="files" class="panel">
            <img src="image/icon/file.svg" class="icon" />
            <div id="file"><img src="image/icon/file-download.svg" class="icon" />file</div></div>

        <div id="tags" class="panel">
            <img src="image/icon/tags.svg" class="icon" />
            <div id="tag"><img src="image/icon/tag.svg" class="icon" />tag</div></div>
        
        <div class="ads"><img src="image/ads.png"/></div></div>

    <div id="content" style="display: inline-block; vertical-align: top; width: 50%; margin: 12 12 12 12;">
        <div id="control" style="margin: 12 12 12 12;">
            <script>
                function edit() { document.getElementById('text').contentEditable = true; }</script>
            <div id="format" style="display:inline-block;">
                <input type="checkbox" onclick="edit();"/>
                <span>web</span><span>text</span></div>
            <div id="history" style="display:inline-block;">view <a>history</a> | <a>0 comments</a></div></div>

        <div id="subject" style="margin: 12 12 12 12;">
            <div id="title">
                Build a server</div>
            <div id="info">
                <img src="user.png" /> | 8/26/2019 | 468 kB</div></div>

        <div id="text" style="margin: 12 12 12 12;">
            <div id="md" style="height:240px; width: 240px;" contenteditable="true"></div>
            <div id="markdown">test</div>
            <button onclick="getMd();">Get</button><button onclick="saveMd();">Save</button><button onclick="renderMd();">Render</button><button onclick="updateMe()">Update</button>
            <script>
                function getMd() { service("http://192.168.1.111:8887/tree/add", { name:"matt", md: $('#md').html() }, alert('yes')); }         
                function saveMd() { service("http://192.168.1.111:8887/tree/edit", { name:"matt", md: $('#md').html() }, alert('yes')); }
                function renderMd() { service("http://192.168.1.111:8888/markdown", { md: $('#md').html() }, alert('yes')); }
                function updateMe() { $('#markdown').html(holder); }

function tutorial() { $.get('temp.md', function(data) { alert(data); service("http://192.168.1.111:8888/markdown", { md: data }, alert('yes')); }, 'text'); }</script>
            <p>Build a stack...</p>
            <img src="image/sample.png" />
            <p>caption</p>
            <ul>
                <li>fast</li>
                <li>big</li></ul>
            <p>Here's how...</p>
            <ol>
                <li>Setup funding...</li>
                <li>Run code...</li></ol>
            <code>
                command
                setup</code>
            <p>See <a>How to run</a> for more...</p></div>

        <div id="list" style="margin: 12 12 12 12;">
            <div id="download" style="display:inline-block;">
                <a><img src="image/icon/file-download.svg" class="icon" />test.jpg (86 kB)</a><br/>
                <a><img src="image/icon/file-download.svg" class="icon" />text.pdf (124 kB)</a></div>
            <div id="mark" style="display:inline-block;">
                <span style="background-color: red;"><img src="image/icon/tag.svg" class="icon" /> donate</span></br/>
                <span style="background-color: yellow;"><img src="image/icon/tag.svg" class="icon" /> caution</span></div></div></div>

    <div id="tool" style="display: inline-block; vertical-align: top; background-color: green;">
        <div id="box">Toolbox</div>

        <div id="editor">tabs for Text, Preview...</div>

        <div id="example"><a>Basic example</a><a>Advanced example</a></div>

        <div class="ads"><img src="image/ads.png" /></div></div></div>

<div id="footer" style="background-color: gray;"><div id="contact">Treeop, Inc. tree@treeop.com</div>

    <div id="bitmaus"><img src="image/icon/bit.jpg" /></div></div>

<div id="template">
	<div id="templateheader">Toolbox</div>
	<div><!-- type view content --><button onclick="editLeaf();">Edit</button><button onclick="deleteLeaf();">Delete</button></div>
	<div><div id="tree_edit">tester</div><button onclick="saveLeaf();">Save</button><button onclick="cancelLeaf();">Cancel</button></div>
	<button onclick="addLeaf();">Add</button></div>

<button onclick="$('#tree_view').html(' '); temp.grow();">Grow</button><button onclick="loadTypes();">Load</button>

<br/><br/>

<div id="tree"></div>
<div id="tree_view"></div>

<script>var types = ["link"]; $("#tree").load("ui.htm", loadTypes()); // load edit templates also...

	function loadTypes() {
	for(i=0;i<types.length;i++) { $('#'+types[i]+'_edit').parent().detach().appendTo($('#tree_edit')); } }

</script>

<div id="stamp">&copy; 2019, Treeop</div>

<script>
var d, datetime = "YYYY.MM.DD HH:mm:SS";

var RR = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
var dd = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
var PP = ["AM", "PM"];

var num_day = [31, 28, 31, 

function getDateTime(format) {
	d = new Date();

	output = format.replace("YYYY", d.getFullYear());
	output = output.replace("MM", d.getMonth() + 1);
	output = output.replace("DD", d.getDate());
	output = output.replace("HH", d.getHours());
	output = output.replace("mm", d.getMinutes());
	output = output.replace("SS", d.getSeconds());
	output = output.replace("hh", d.getHours() % 12);
	output = output.replace("PP", PP[(d.getHours() > 11) ? 1 : 0]);
	output = output.replace("RR", RR[d.getMonth()]);
	output = output.replace("dd", dd[d.getDay()]);

	return output; }

setInterval(function() { $("#datetime").html(getDateTime(datetime)); }, 1000);

function getTimeRemain(datetime) {
	var g = new Date();
	g = datetime.getTime() - g.getTime();  // get milliseconds
	var hours = g;
	hours = hours / (60 * 60 * 1000); 
	
	return hours;
}

function startTimer() {
	var e = document.getElementById("pulledDate").value;
	var f = new Date();

	alert(getTimeRemain(f));
	var num_days = f.getMonth() % 2
	f.getDay()
	$('#board').html(
}
	
var start, end, started = false;
var issues = [];
function startTimer2() {
var e = new Date();
if (!started) {
	start = e.getTime();
	started = true;
} else {
	var f = new Date();
	end = e.getTime();
	started = false;
}
document.getElementById("timer").innerHTML = end - start;
}

function pullTime() { document.getElementById("pulledDate").value = getDateTime(); }


function function1() {
  var ul = document.getElementById("list");
  var li = document.createElement("li");
  li.appendChild(document.createTextNode("Four"));
  li.setAttribute("id", "element4"); // added line
  ul.appendChild(li);
  alert(li.id); }

function freeze() {
	//document.body.attachEvent("onclick", unfreeze);
	document.body.addEventListener('click', unfreeze, true);
	$("#frozen").addClass("freeze");
	$("#stamp").addClass("temporary"); }

function unfreeze() {
	//alert('now');
	document.body.removeEventListener('click', unfreeze, true);
	$("#frozen").removeClass("freeze"); 
	$("#stamp").removeClass("temporary"); }</script>

<style>

.freeze { visibility: visible !important; opacity: 1 !important; }

#stamp { padding: 12 12 12 12; border-radius: 4px; border: solid black 2px; width: 160px; text-align: center; font-family: Roboto; }
#stamp:hover { background-color: lightgrey; cursor: pointer; }

.temporary { background-color: lightgrey; cursor: default!important; }

.form-group { position: relative; margin-bottom: 1.5rem; font-family: Roboto; }
.form-control-placeholder {
  	position: absolute; top: 0;
  	margin-left: -180px; margin-top: 4px; padding: 2 2 2 2;
	-webkit-transition: all 200ms; -moz-transition: all 200ms; -o-transition: all 200ms;
  	transition: all 200ms; opacity: 0.5; z-index: 4;
  	background-color: white; }

input { border: solid lightgray 1px; border-radius: 4px; height: 32px; padding: 10 10 10 10;  }
input:focus { border: solid green 2px; border-radius: 4px; outline:none; box-shadow: 0.5px 0.5px #888888; }

.form-control:focus + .form-control-placeholder,
.form-control:valid + .form-control-placeholder { font-size: 75%; 
-webkit-transform: translate3d(0, -60%, 0);
  -moz-transform:    translate3d(0, -60%, 0);
  -ms-transform:     translate3d(0, -60%, 0);
  -o-transform:      translate3d(0, -60%, 0);
transform: translate3d(0, -60%, 0); opacity: 1; color: darkgreen; }

@media screen and (max-height: 450px) { .sidenav {padding-top: 15px;} .sidenav a {font-size: 18px;} }</style>

Hello, msebolt<br/><br/>

<div id="stamp" class="tooltip" onclick="freeze();"><div id="datetime"></div>
  <span id="frozen" class="tooltiptext">
	  <input type="radio" name="formats" value="hh:mm PP on dd, RR DD, YYYY" onchange="datetime=this.value; $('#format').value(this.value); "> Formal<br>
		<input type="radio" name="formats" value="YYYY.MM.DD HH:mm:SS" onchange="datetime=this.value;"> Informal<br>
		<input type="radio" name="formats" value="other" onchange="$('#format').prop('disabled', false);"> Custom  <input id="format" disabled="true" value="YYYY.MM.DD HH:mm:SS" type="text" onfocusout="datetime=this.value;"/></span></div>

<br/><br/>
<button onclick="startTimer();">Start</button>
<div id="timer"></div>
<input id="pulledDate" type="text" />
<button onclick="pullTime();">Pull</button>

<div id="board"></div>
<input type="checkbox" />

#template { position: absolute; z-index: 9; background-color: #f1f1f1; border: 1px solid #d3d3d3; text-align: center; }
#templateheader { padding: 10px; cursor: move; z-index: 10; background-color: #2196F3; color: #fff; }

    // primary concern is being able to launch file browser/editor...
    // for sharing, need to designate public/private, read/write

    //JSON.parse(response)
