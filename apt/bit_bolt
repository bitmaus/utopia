
1. Install needed packages, find graphics with `lspci | grep -e VGA -e 3D`:

convert -resize 640x480 -depth 16 -colors 65536 my_custom_image.png splash.png

1. Mount the fat and ext4 extra partitions.

(get public key)
gpg --search-keys 'myfriend@his.isp.com' --keyserver hkp://subkeys.pgp.net
gpg --import name_of_pub_key_file

(encrypt) *--armor optional
gpg --encrypt --recipient 'Your Name' foo.txt
gpg --encrypt --recipient 'myfriend@his.isp.net' foo.txt

(decrypt)
gpg --output foo.txt --decrypt foo.txt.gpg

(sign)
gpg --armor --detach-sign your-file.zip --output doc.sig
gpg --verify doc.sig crucial.tar.gz

gpg --search-keys 'myfriend@his.isp.com' --keyserver hkp://subkeys.pgp.net
gpg --import name_of_pub_key_file
gpg --verify doc.sig crucial.tar.gz

    cat ~/tree/public.key >> ~/.ssh/authorized_keys
    systemctl start sshd
    systemctl enable sshd.socket

1. Start a remote repository with `git init --bare` (and `--shared=group`?) then set permissions:
```
chown -R tree:tree /path/to/repo
chmod -R g+rw /path/to/repo
```

...and start the repo locally or remotely:
```
mkdir project
cd project
git init
git add .
git commit -m 'initial commit'
git remote add origin user@server:/path/to/repo/project.git
git push origin master
```

Use `xinit` then `xrandr` to display screen resolutions. 


1. Backup and restore

rsync -av --delete "/home/matt/site" "/usr/local/nginx/html" (could add -u to skip files newer on the receiver?)

scp -i ~/.ssh/mytest.key root@192.168.1.1:/<filepath on host>  <path on client> # copy backup files

automate with `crontab -e`, add entry `0 5 * * * rsync -av --delete /media/USBHDD1/shares /media/USBHDD2/shares` to backup at 5am every day.

1. Start a database replica with `mkdir -p /data/db`, then `service mongod start`

1. Get address with `ip address show`. (monero with wallet?)

Your private key should have permission 0600 while your public key have permission 0644.

append & to commands to run in background (or nohup command &)
...closing terminal terminates applications unless you run disown

chmod u+x scriptname # make script executable

chmod 600 file # owner can read and write
chmod 700 file # owner can read, write and execute
chmod 666 file # all can read and write
chmod 777 file # all can read, write and execute

mkdir -p /var/www/treeop
        ...copy over application files
sudo chown -R $USER:$USER /var/www/treeop
sudo chmod -R 755 /var/www/treeop
        cd site

sudo bash # for continued root access
sudo poweroff  # shutdown
sudo reboot # reboot

ps aux | grep spawn # find process
kill 9 10509        # end process

ls -R > myfile.txt # pull bash history

sudo ufw allow 1701    # allow port through firewall

iptables -A FORWARD -i eth1 -s 192.168.1.0/255.255.255.0 -j ACCEPT

ifconfig bridge0 create

ip link show

ip link add name br0 type bridge
ip addr add 172.20.0.1/16 dev br0
ip link set br0 up

...clone git repo also...

hold Ctrl and press ']' three times...



#!/bin/bash

DRIVE='/dev/sda'
HOSTNAME='bolt'
ROOT_PASSWORD='bitmaus' # leave blank to be prompted
USER_NAME='bit'
USER_PASSWORD='bitmaus' # leave blank to be prompted
TIMEZONE='America/Los_Angeles'

PACKAGES=''
#imagemagick jdk8-openjdk repo tigervnc rsync hostapd dnsmasq 

s

